# Generated by stepconf at Fri Jul 12 15:55:46 2013
# If you make changes to this file, they will be
# overwritten when you run stepconf again

loadrt drawbotkins

loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES
loadrt probe_parport
loadrt hal_parport cfg="0x378 out  "
loadrt debounce cfg=4


setp parport.0.reset-time 1000

loadrt stepgen step_type=0,0,0,0
loadrt charge_pump

net estop-out charge-pump.enable iocontrol.0.user-enable-out
net charge-pump <= charge-pump.out
loadrt pwmgen output_type=1

# Add all base-thread functions
addf parport.0.read base-thread
addf stepgen.make-pulses base-thread
addf charge-pump base-thread
addf pwmgen.make-pulses base-thread
addf parport.0.write base-thread
addf parport.0.reset base-thread
addf debounce.0 base-thread

# Add all servo thread functions
addf stepgen.capture-position servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf stepgen.update-freq servo-thread
addf pwmgen.update servo-thread
addf drawbot.home servo-thread

net spindle-cmd <= motion.spindle-speed-out => pwmgen.0.value
net spindle-on <= motion.spindle-on => pwmgen.0.enable
net spindle-pwm <= pwmgen.0.pwm
setp pwmgen.0.pwm-freq 100.0
setp pwmgen.0.scale 1166.66666667
setp pwmgen.0.offset 0.114285714286
setp pwmgen.0.dither-pwm true
net dout-00 <= motion.digital-out-00
net dout-01 <= motion.digital-out-01

setp parport.0.pin-02-out-reset 1
setp parport.0.pin-03-out-invert 1
setp parport.0.pin-04-out-reset 1
setp parport.0.pin-05-out-invert 1
setp parport.0.pin-06-out-reset 1
setp parport.0.pin-07-out-invert 1
setp parport.0.pin-08-out-reset 1
setp parport.0.pin-09-out-invert 1

# Configure Parallel port output
net dout-01 => parport.0.pin-01-out
net xstep => parport.0.pin-02-out
net xdir => parport.0.pin-03-out
net ystep => parport.0.pin-04-out
net ydir => parport.0.pin-05-out
net zstep => parport.0.pin-06-out
net zdir => parport.0.pin-07-out
net astep => parport.0.pin-08-out
net adir => parport.0.pin-09-out
net spindle-pwm => parport.0.pin-14-out
net charge-pump => parport.0.pin-16-out
net dout-00 => parport.0.pin-17-out

# Configure parallel port input
net raw-min-x <= parport.0.pin-10-in
net raw-min-y <= parport.0.pin-11-in
net raw-min-z <= parport.0.pin-12-in
net raw-min-a <= parport.0.pin-13-in
net estop-ext <= parport.0.pin-15-in-not

# Configure step generation
setp stepgen.0.position-scale [AXIS_0]SCALE
setp stepgen.1.position-scale [AXIS_1]SCALE
setp stepgen.2.position-scale [AXIS_2]SCALE
setp stepgen.3.position-scale [AXIS_3]SCALE

setp stepgen.0.steplen 1
setp stepgen.1.steplen 1
setp stepgen.2.steplen 1
setp stepgen.3.steplen 1

setp stepgen.0.stepspace 0
setp stepgen.1.stepspace 0
setp stepgen.2.stepspace 0
setp stepgen.3.stepspace 0

setp stepgen.0.dirhold 15200
setp stepgen.1.dirhold 15200
setp stepgen.2.dirhold 15200
setp stepgen.3.dirhold 15200

setp stepgen.0.dirsetup 15200
setp stepgen.1.dirsetup 15200
setp stepgen.2.dirsetup 15200
setp stepgen.3.dirsetup 15200

setp stepgen.0.maxaccel [AXIS_0]STEPGEN_MAXACCEL
setp stepgen.1.maxaccel [AXIS_1]STEPGEN_MAXACCEL
setp stepgen.2.maxaccel [AXIS_2]STEPGEN_MAXACCEL
setp stepgen.3.maxaccel [AXIS_3]STEPGEN_MAXACCEL

net xpos-cmd <= axis.0.motor-pos-cmd => stepgen.0.position-cmd
net ypos-cmd <= axis.1.motor-pos-cmd => stepgen.1.position-cmd
net zpos-cmd <= axis.2.motor-pos-cmd => stepgen.2.position-cmd
net apos-cmd <= axis.3.motor-pos-cmd => stepgen.3.position-cmd

net xpos-fb stepgen.0.position-fb => axis.0.motor-pos-fb
net ypos-fb stepgen.1.position-fb => axis.1.motor-pos-fb
net zpos-fb stepgen.2.position-fb => axis.2.motor-pos-fb
net apos-fb stepgen.3.position-fb => axis.3.motor-pos-fb

#net xpos-fb stepgen.0.position-fb => drawbot.0.position-fb
#net ypos-fb stepgen.1.position-fb => drawbot.1.position-fb
#net zpos-fb stepgen.2.position-fb => drawbot.2.position-fb
#net apos-fb stepgen.3.position-fb => drawbot.3.position-fb

net xstep <= stepgen.0.step
net ystep <= stepgen.1.step
net zstep <= stepgen.2.step
net astep <= stepgen.3.step

net xdir <= stepgen.0.dir
net ydir <= stepgen.1.dir
net zdir <= stepgen.2.dir
net adir <= stepgen.3.dir

net xenable axis.0.amp-enable-out => stepgen.0.enable
net yenable axis.1.amp-enable-out => stepgen.1.enable
net zenable axis.2.amp-enable-out => stepgen.2.enable
net aenable axis.3.amp-enable-out => stepgen.3.enable

# Debounce the home switch inputs
net raw-min-x => debounce.0.0.in
net raw-min-y => debounce.0.1.in
net raw-min-z => debounce.0.2.in
net raw-min-a => debounce.0.3.in

net min-x <= debounce.0.0.out => axis.0.home-sw-in
net min-y <= debounce.0.1.out => axis.1.home-sw-in
net min-z <= debounce.0.2.out => axis.2.home-sw-in
net min-a <= debounce.0.3.out => axis.3.home-sw-in

#Attach halui
net is-running <= halui.program.is-running => drawbot.is-running

# Joint homed state
net homed-x <= halui.joint.0.is-homed => drawbot.0.is-homed
net homed-y <= halui.joint.1.is-homed => drawbot.1.is-homed
net homed-z <= halui.joint.2.is-homed => drawbot.2.is-homed
net homed-a <= halui.joint.3.is-homed => drawbot.3.is-homed

# Joint home switches
net min-x => drawbot.0.home-sw
net min-y => drawbot.1.home-sw
net min-z => drawbot.2.home-sw
net min-a => drawbot.3.home-sw

# Joint home commands
net home-x <= drawbot.0.home => halui.joint.0.home
net home-y <= drawbot.1.home => halui.joint.1.home
net home-z <= drawbot.2.home => halui.joint.2.home
net home-a <= drawbot.3.home => halui.joint.3.home

net estop-out <= iocontrol.0.user-enable-out
net estop-ext => iocontrol.0.emc-enable-in

net tool-number <= iocontrol.0.tool-prep-number
net tool-change-loopback iocontrol.0.tool-change => iocontrol.0.tool-changed
net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared