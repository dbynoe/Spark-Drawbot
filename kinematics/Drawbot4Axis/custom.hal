# Include your customized HAL commands here
# The commands in this file are run after the AXIS GUI (including PyVCP panel) starts

#Attach halui
setp halui.jog-speed 2000.0
setp halui.jog-deadband 0.01

net unpowered not.0.in <= halui.machine.is-on

net occupied-running or2.0.in0 <= halui.program.is-running
net occupied-unpowered or2.0.in1 <= not.0.out

net is-occupied <= or2.0.out => drawbot.is-occupied

# Joint home switches
net min-x => drawbot.0.home-sw
net min-y => drawbot.1.home-sw
net min-z => drawbot.2.home-sw
net min-a => drawbot.3.home-sw

# Joint motion
net motion-x <= axis.0.in-position => drawbot.0.in-position
net motion-y <= axis.1.in-position => drawbot.1.in-position
net motion-z <= axis.2.in-position => drawbot.2.in-position
net motion-a <= axis.3.in-position => drawbot.3.in-position

# Coordinate 
#net jog-joint <= drawbot.is-homing
#net jog-joint => halui.mode.joint
#net jog-joint => not.1.in

#net jog-coord <= not.1.out
#net jog-coord => halui.mode.teleop

# Joint homed state
net homed-x <= halui.joint.0.is-homed
net homed-y <= halui.joint.1.is-homed
net homed-z <= halui.joint.2.is-homed
net homed-a <= halui.joint.3.is-homed

net homed-x => drawbot.0.is-homed
net homed-y => drawbot.1.is-homed
net homed-z => drawbot.2.is-homed
net homed-a => drawbot.3.is-homed

# Joint home commands
net home-x <= drawbot.0.home => halui.joint.0.home
net home-y <= drawbot.1.home => halui.joint.1.home
net home-z <= drawbot.2.home => halui.joint.2.home
net home-a <= drawbot.3.home => halui.joint.3.home

# Joint output
net jog-x <= drawbot.0.jog => halui.jog.0.analog
net jog-y <= drawbot.1.jog => halui.jog.1.analog
net jog-z <= drawbot.2.jog => halui.jog.2.analog
net jog-a <= drawbot.3.jog => halui.jog.3.analog
